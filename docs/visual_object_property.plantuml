@startuml visual_object_property

'Wav2Bar - Free software for creating audio visualization (motion design) videos
'Copyright (C) 2023  Picorims <picorims.contact@gmail.com>

'This program is free software: you can redistribute it and/or modify
'it under the terms of the GNU General Public License as published by
'the Free Software Foundation, either version 3 of the License, or
'any later version.

'This program is distributed in the hope that it will be useful,
'but WITHOUT ANY WARRANTY; without even the implied warranty of
'MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
'GNU General Public License for more details.

'You should have received a copy of the GNU General Public License
'along with this program.  If not, see <https://www.gnu.org/licenses/>.

!theme cyborg-outline
skinparam BackgroundColor #222222
skinparam groupInheritance 2
skinparam PackageStyle frame

package "visual_objects" {
    class VisualObject {}
}

package "event_mixin" {
    class EventMixin <<mixin>> {}
}

package "index" {
    class SaveHandler {}
}

package "ui_components" {
    class UIParameter {}
}

package "visual_update_property" {
    abstract class VisualObjectProperty {
        - _save_handler: SaveHandler
        - _visual_object: VisualObject
        - _property_name: String
        - _default_value: JSONValidValue
        - _allowed_values: Array[String]
        - _ui_parameter: UIParameter
        --
        + VisualObjectProperty(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String): VisualObjectProperty
        ..
        + {abstract} getDefaultValue(): any
        + getCurrentValue(): JSONValidValue
        + setSave(value: JSONValidValue): void
        + setSaveUISafe(value: JSONValidValue): void
        + verify(): void
        + {abstract} hasValidValue(): Boolean
    }
    VisualObjectProperty .up. EventMixin: with
    VisualObjectProperty " " -up- "1 _save_handler" SaveHandler
    VisualObjectProperty " " -up- "1 _visual_object" VisualObject
    VisualObjectProperty " " -up- "1 _visual_object" UIParameter

    'shared properties

    class VPName {
        --
        + VPName(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPName
        ..
        + getDefaultValue(): String
        + hasValidValue(): Boolean
        + rename(name: String): void
    }
    VisualObjectProperty <|-- VPName

    class VPLayer {
        --
        + VPLayer(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPLayer
        ..
        + getDefaultValue(): Integer
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPLayer

    class VPCoordinates {
        --
        + VPCoordinates(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPCoordinates
        ..
        + getDefaultValue(): Object
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPCoordinates

    class VPSize {
        --
        + VPSize(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPSize
        ..
        + getDefaultValue(): Object
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPSize

    class VPRotation {
        --
        + VPRotation(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPRotation
        ..
        + getDefaultValue(): Number
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPRotation

    class VPSVGFilter {
        --
        + VPSVGFilter(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPSVGFilter
        ..
        + getDefaultValue(): String
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPSVGFilter

    'common properties

    
    class VPColor {
        --
        + VPColor(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPColor
        ..
        + getDefaultValue(): String
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPColor
    
    class VPBorderRadius {
        --
        + VPBorderRadius(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPBorderRadius
        ..
        + getDefaultValue(): String
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPBorderRadius
    
    class VPBoxShadow {
        --
        + VPBoxShadow(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPBoxShadow
        ..
        + getDefaultValue(): String
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPBoxShadow
    
    class VPBackground {
        --
        + VPBackground(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPBackground
        ..
        + getDefaultValue(): Object
        + hasValidValue(): Boolean
        + parseBackgroundSize(bgnd_size: String): Object
        + stringifyBackgroundSize(size_type: String,
        size_x: String, size_y: String): String
        + parseBackgroundRepeat(bgnd_repeat: String): Object
        + stringifyBackgroundRepeat(repeat_x: Boolean,
        repeat_y: Boolean): String
    }
    VisualObjectProperty <|-- VPBackground

    'text properties
    
    class VPTextType {
        --
        + VPTextType(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPTextType
        ..
        + getDefaultValue(): String
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPTextType
    
    class VPTextContent {
        --
        + VPTextContent(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPTextContent
        ..
        + getDefaultValue(): String
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPTextContent
    
    class VPFontSize {
        --
        + VPFontSize(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPFontSize
        ..
        + getDefaultValue(): Integer
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPFontSize
    
    class VPTextDecoration {
        --
        + VPTextDecoration(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPTextDecoration
        ..
        + getDefaultValue(): Object
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPTextDecoration
    
    class VPTextAlign {
        --
        + VPTextAlign(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPTextAlign
        ..
        + getDefaultValue(): String
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPTextAlign
    
    class VPTextShadow {
        --
        + VPTextShadow(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPTextShadow
        ..
        + getDefaultValue(): String
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPTextShadow

    'timer properties
        
    class VPTimerInnerSpacing {
        --
        + VPTimerInnerSpacing(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPTimerInnerSpacing
        ..
        + getDefaultValue(): Integer
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPTimerInnerSpacing
        
    class VPBorderThickness {
        --
        + VPBorderThickness(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPBorderThickness
        ..
        + getDefaultValue(): Integer
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPBorderThickness
    
    ' particle flow properties

    class VPParticleRadiusRange {
        --
        + VPParticleRadiusRange(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPParticleRadiusRange
        ..
        + getDefaultValue(): Array
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPParticleRadiusRange

    class VPFlowType {
        --
        + VPFlowType(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPFlowType
        ..
        + getDefaultValue(): String
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPFlowType

    class VPFlowCenter {
        --
        + VPFlowCenter(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPFlowCenter
        ..
        + getDefaultValue(): Object
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPFlowCenter

    class VPFlowDirection {
        --
        + VPFlowDirection(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPFlowDirection
        ..
        + getDefaultValue(): Integer
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPFlowDirection

    class VPParticleSpawnProbability {
        --
        + VPParticleSpawnProbability(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPParticleSpawnProbability
        ..
        + getDefaultValue(): Number
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPParticleSpawnProbability

    class VPParticleSpawnTests {
        --
        + VPParticleSpawnTests(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPParticleSpawnTests
        ..
        + getDefaultValue(): Number
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPParticleSpawnTests

    'visualizer properties
    
    class VPVisualizerRadius {
        --
        + VPVisualizerRadius(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPVisualizerRadius
        ..
        + getDefaultValue(): Integer
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPVisualizerRadius

    class VPVisualizerPointsCount {
        --
        + VPVisualizerPointsCount(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPVisualizerPointsCount
        ..
        + getDefaultValue(): Integer
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPVisualizerPointsCount

    class VPVisualizerAnalyserRange {
        --
        + VPVisualizerAnalyserRange(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPVisualizerAnalyserRange
        ..
        + getDefaultValue(): Array
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPVisualizerAnalyserRange

    class VPVisualizationSmoothingType {
        --
        + VPVisualizationSmoothingType(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPVisualizationSmoothingType
        ..
        + hasValidValue(): String
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPVisualizationSmoothingType

    class VPVisualizationSmoothingFactor {
        --
        + VPVisualizationSmoothingFactor(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPVisualizationSmoothingFactor
        ..
        + getDefaultValue(): Number
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPVisualizationSmoothingFactor

    class VPVisualizerBarThickness {
        --
        + VPVisualizerBarThickness(save_handler: SaveHandler,
        visual_object: VisualObject, property_name: String,
        default_value: JSONValidValue): VPVisualizerBarThickness
        ..
        + getDefaultValue(): Number
        + hasValidValue(): Boolean
    }
    VisualObjectProperty <|-- VPVisualizerBarThickness
}